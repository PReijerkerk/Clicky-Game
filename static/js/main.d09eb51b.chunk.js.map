{"version":3,"sources":["components/wrapper/wrapper.js","components/navbar/navbar.js","components/header/header.js","components/scoreboard/scoreboard.js","components/imageCard/imageCard.js","components/gameover/gameover.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Navbar","href","class","Header","Scoreboard","msg","score","highScore","ImageCard","id","name","onClick","handleClick","alt","src","img_url","GameOver","gameover","countdown","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","monsters","selected","shuffleMonsters","shuffled","array","i","length","j","Math","floor","random","_ref","randomMonster","setState","indexOf","increment","concat","toConsumableArray","reset","setTimeout","newScore","prevState","bind","assertThisInitialized","_this2","wrapper","navbar_navbar","header_header","scoreboard_scoreboard","gameover_gameover","map","monster","imageCard_imageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d09eb51b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Wrapper = props => <div className=\"container-fluid\">{props.children}</div>;\n\nexport default Wrapper;","import React from 'react';\nimport './navbar.css';\n\nconst Navbar = () => (\n    <nav className=\"navbar mb-1 navigation\">\n      <div className=\"navbar-header\">\n        <a className=\"navbar-brand\" href=\"/Clicky-Game\">Scooby-Doo Clicky-Game!</a>\n      </div>\n      <ul className=\"nav navbar-nav\">\n        <a class=\"github\" href=\"https://github.com/PReijerkerk/Clicky-Game\">GitHub Repo</a>\n      </ul>\n    </nav>\n);\n\nexport default Navbar;","import React from 'react';\nimport './header.css';\n\nconst Header = () => (\n  <div className=\"container\">\n    <div className=\"jumbotron bg text-center\">\n      <h1 className=\"logo\">Scooby-Doo Clicky-Game!</h1>\n      <p className=\"desc\">Click on a monster to earn points, if you click the same monster twice the game will end!</p>\n    </div>\n  </div>\n);\n\nexport default Header;","import React from 'react';\nimport './scoreboard.css';\n\nconst Scoreboard = props => (\n  <div className=\"container text-center mb-3\">\n    <div className=\"row\">\n      <div className=\"col-sm-6\">\n        \n          <p className=\"scoreboard\">{props.msg}</p>\n        \n      </div>\n      <div className=\"col-sm-6\">\n        <p className=\"scoreboard\">Score: {props.score} | High Score: {props.highScore}</p>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Scoreboard;","import React from 'react';\nimport './imageCard.css';\n\nconst ImageCard = props => (\n  <div\n      id={props.name}\n      onClick={() => props.handleClick(props.name)}\n    >\n      <img className=\"img-thumbnail\" alt={props.name} src={props.img_url} />\n  </div>\n);\n\nexport default ImageCard;","import React from 'react';\nimport './gameover.css';\n\nconst GameOver = (props) => {\n  if (props.score === 12) {\n    return(\n      <div className=\"winner text-center container-fluid\">  \n        <button className=\"new-game btn\" onClick={() => props.handleClick(props.gameover)}>new game</button>\n      </div>\n    )\n  } else {\n    return(\n      <div className=\"container text-center\">\n        <h1 className=\"gameover\">{props.countdown}</h1>\n      </div>\n    )\n  }\n}\n;\n\nexport default GameOver;","import React, { Component } from 'react';\nimport monsters from './monsters.json';\nimport Wrapper from './components/wrapper/wrapper';\nimport Navbar from './components/navbar/navbar';\nimport Header from './components/header/header';\nimport Scoreboard from './components/scoreboard/scoreboard';\nimport ImageCard from './components/imageCard/imageCard';\nimport GameOver from './components/gameover/gameover';\n\nfunction randomMonster(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n    state = {\n      msg: 'Click any monster to begin',\n      score: 0,\n      highScore: 0,\n      monsters: monsters,\n      selected: [],\n      gameover: false,\n      countdown: '',\n    }\n  \n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n    shuffleMonsters = () => {\n      let shuffled = randomMonster(monsters);\n      this.setState({monsters: shuffled});\n    }\n\n    handleClick = (name) => {\n      if (!this.state.gameover) {\n        if (this.state.selected.indexOf(name) === -1) {\n          this.increment();\n          this.setState({selected: [...this.state.selected, name]});\n        } else {\n          this.setState({msg: 'Game Over!', gameover: true})\n          this.reset();\n          setTimeout(() => {\n            this.setState({ countdown: 3 });\n          }, 1000)\n          setTimeout(() => {\n            this.setState({ countdown: 2 });\n          }, 2000)\n          setTimeout(() => {\n            this.setState({ countdown: 1 });\n          }, 3000)\n        }\n      } else {\n        this.setState({ \n          msg: 'Click any monster to begin', \n          selected: [],\n          score: 0,\n          gameover: false\n        });\n      }\n    }\n\n    increment = () => {\n      const newScore = this.state.score + 1;\n      this.setState({\n        score: newScore,\n        msg: 'You gained a point!'\n      });\n      if (newScore >= this.state.highScore) {\n        this.setState({highScore: newScore});\n      }\n      if (newScore === 12) {\n        this.setState({\n          msg: \"You've won!\",\n          selected: [],\n          gameover: true\n        });\n      }\n      this.shuffleMonsters();\n    };\n\n    reset = () => {\n      setTimeout(() => {\n        this.setState((prevState) => ({          \n          msg: 'Click any monster to begin',           \n          score: 0,           \n          highScore: prevState.highScore,           \n          selected: [],           \n          gameover: false,           \n          countdown: 3         \n        }));    \n        this.shuffleMonsters()\n      }, 4000);\n    }\n\nrender() {\n  if (!this.state.gameover) {\n    return (\n        <Wrapper>\n          <Navbar />\n          <Header />\n          <Scoreboard \n            msg={this.state.msg}\n            score={this.state.score}\n            highScore={this.state.highScore}\n          />\n          <div className=\"container\">  \n          { \n            this.state.monsters.map(monster => (\n              <ImageCard \n                key={monster.name}\n                name={monster.name}\n                img_url={monster.img_url}\n                handleClick={this.handleClick}\n              />\n            ))\n          }\n          </div>\n        </Wrapper>\n      )\n    } else {\n      return (\n        <Wrapper>\n          <Navbar />\n          <Header />\n            <Scoreboard\n              msg={this.state.msg}\n              score={this.state.score}\n              highScore={this.state.highScore}\n            />\n          <div className=\"container\">\n            <GameOver\n              msg={this.props.msg}\n              score={this.state.score}\n              gameover={this.state.gameover}\n              countdown={this.state.countdown}\n              handleClick={this.handleClick}\n            />\n          </div>\n        </Wrapper>\n      )\n    }\n  }  \n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}